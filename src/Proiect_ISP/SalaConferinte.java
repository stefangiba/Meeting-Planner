// --------------------------------------------------------

// Code generated by Papyrus Java
// --------------------------------------------------------
package Proiect_ISP;

import java.util.HashMap;
import java.util.HashSet;;

public class SalaConferinte
{
	private String numeSala;
	private int numarLocuri;
	private HashMap<String, HashSet<String>> orar;
	
	public SalaConferinte() {
		this.numeSala = "default";
		this.numarLocuri = 0;
		this.orar = new HashMap<>();
	}
	
	public SalaConferinte(String numeSala, int numarLocuri) {
		this.numeSala = numeSala;
		this.numarLocuri = numarLocuri;
		this.orar = new HashMap<>();
	}
	
	public String getNumeSala() {
		return numeSala;
	}

	public void setNumeSala(String numeSala) {
		this.numeSala = numeSala;
	}

	public int getNumarLocuri() {
		return numarLocuri;
	}

	public void setNumarLocuri(int numarLocuri) {
		this.numarLocuri = numarLocuri;
	}

	public HashMap<String, HashSet<String>> getOrar() {
		return orar;
	}

	public void setOrar(HashMap<String, HashSet<String>> orar) {
		this.orar = orar;
	}

	/*
	 * Aceasta functie este folosita pentru a verifica daca o sala este ocupata, iar in cazul in care nu este
	 * se adauga in orar.
	 * Returneaza true in cazul in care sala e libera, si false daca sala e ocupata
	 */
	public boolean verificareSala(String data, String interval) {
		if (orar.containsKey(data)) {
			if(orar.get(data).contains(interval)) {
				return false;
			} else {
				for (String item: orar.get(data)) {
					if(item.split("-")[0].equals(interval.split("-")[0])) {
						return false;
					} else if(item.split("-")[1].equals(interval.split("-")[1])) {
						return false;
					} else if(interval.split("-")[0].compareTo(item.split("-")[0])<0 && interval.split("-")[1].compareTo(item.split("-")[0])>0) {
						return false;
					} else if(interval.split("-")[0].compareTo(item.split("-")[0])>0 && interval.split("-")[0].compareTo(item.split("-")[1])<0) {
						return false;
					}
				}
				orar.get(data).add(interval);
				return true;
			}
		} else {
			orar.put(data, new HashSet<>());
			orar.get(data).add(interval);
			return true;
		}
	}
}
